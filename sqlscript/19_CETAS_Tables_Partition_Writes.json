{
	"name": "19_CETAS_Tables_Partition_Writes",
	"properties": {
		"folder": {
			"name": "nyc_taxi/ldw"
		},
		"content": {
			"query": "-- USE CETAS to create a EXTERNAL PARTITIONED TABLE with the HELP of Stored \n-- PRODUCEDURE.\n-- BECAUSE CETAS does not have capacity to create external partitioned tables.\n-- It writes all data into 1 file.\n\n-- We will use one CETAS statement for each of the partitions in our table. \n-- So, we will be able to write each partition to different folders.\n-- This is good but very inefficient. Because we can have many partitions and each CETAS will create\n-- one new external table.\n\n-- INSTEAD\n/*\nWe want to use VIEW to prune partitions and write partitions into different files.\n*/\n\n-- We will use STORED PROCEDURE.\n    -- This Stored Producer will loop over partitions and will do CETAS for each parititon\n    -- So, we will have many CETAS. external Tables \n    -- We will drop them all because only metada will be removed.\n    -- then we will use VIEW to read from partitions in our external files.\n\nUSE nyc_taxi_ldw\nGO\n\nCREATE OR ALTER PROCEDURE silver.usp_silver_trip_data_green\n@year VARCHAR(4),\n@month VARCHAR(2)\nAS\nBEGIN\n\n    DECLARE @create_sql_stmt NVARCHAR(MAX),\n            @drop_sql_stmt   NVARCHAR(MAX);\n\n    SET @create_sql_stmt = \n        'CREATE EXTERNAL TABLE silver.trip_data_green_' + @year + '_' + @month + \n        ' WITH\n            (\n                DATA_SOURCE = nyc_taxi_src,\n                LOCATION = ''silver/trip_data_green/year=' + @year + '/month=' + @month + ''',\n                FILE_FORMAT = parquet_file_format\n            )\n        AS\n        SELECT [VendorID] AS vendor_id\n                ,[lpep_pickup_datetime]\n                ,[lpep_dropoff_datetime]\n                ,[store_and_fwd_flag]\n                ,[total_amount]\n                ,[payment_type]\n                ,[trip_type]\n                ,[congestion_surcharge]\n                ,[extra]\n                ,[mta_tax]\n                ,[tip_amount]\n                ,[tolls_amount]\n                ,[ehail_fee]\n                ,[improvement_surcharge]\n                ,[RatecodeID] AS rate_code_id\n                ,[PULocationID] AS pu_location_id\n                ,[DOLocationID] AS do_location_id\n                ,[passenger_count]\n                ,[trip_distance]\n                ,[fare_amount]\n        FROM bronze.vw_trip_data_green_csv\n        WHERE year = ''' + @year + '''\n          AND month = ''' + @month + '''';    \n\n    print(@create_sql_stmt)\n\n    EXEC sp_executesql @create_sql_stmt;\n\n    SET @drop_sql_stmt = \n        'DROP EXTERNAL TABLE silver.trip_data_green_' + @year + '_' + @month;\n\n    print(@drop_sql_stmt)\n    EXEC sp_executesql @drop_sql_stmt;\n\nEND;\n\n\n-- SELECT * FROM bronze.vw_trip_data_green_csv\n\n\n\nEXEC silver.usp_silver_trip_data_green '2020', '01'\nGO\nEXEC silver.usp_silver_trip_data_green '2020', '03'\nGO\nEXEC silver.usp_silver_trip_data_green '2020', '04'\nGO\nEXEC silver.usp_silver_trip_data_green '2020', '05'\n\nGO \n\n\n-- Now, lets create a VIEW on the STORAGE for Partition PRUNNING\nUSE nyc_taxi_ldw\nGO \n\n-- Create view for trip_data_green\nDROP VIEW IF EXISTS silver.vw_trip_data_green\nGO\n\nCREATE VIEW silver.vw_trip_data_green\nAS\nSELECT\n    result.filepath(1) AS year,\n    result.filepath(2) AS month,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'silver/trip_data_green/year=*/month=*/*.parquet',\n        DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'PARQUET'\n    )\n    WITH (\n        vendor_id INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        rate_code_id INT,\n        pu_location_id INT,\n        do_location_id INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n  ) AS [result]\nGO\n\nSELECT TOP(100) *\n  FROM silver.vw_trip_data_green\nGO\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}