{
	"name": "6_explore_rate_code_json",
	"properties": {
		"folder": {
			"name": "nyc_taxi/Discovery"
		},
		"content": {
			"query": "use nyc_taxi_discovery\n\n\n--Standart JSON File\n\n/*\n[{\"rate_code_id\":1,\"rate_code\":\"Standard rate\"} \n,{\"rate_code_id\":2,\"rate_code\":\"JFK\"} \n,{\"rate_code_id\":3,\"rate_code\":\"Newark\"} \n,{\"rate_code_id\":4,\"rate_code\":\"Nassau or Westchester\"}]\n*/\n\n-- This File is Different Than Simple JSON, because in Simple JSON each line is a valid JSON object\n-- But In THis File Each Line is not a Valid JSON, it is just a continuation of the single JSON\n-- Here We will read entire file as one json string\n\nSELECT \n    *,\n    rate_code,\n    rate_code_id\n    FROM OPENROWSET(\n        BULK 'rate_code.json',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        FIELDTERMINATOR = '0x0b',-- VERTICAL TAB\n        FIELDQUOTE = '0x0b', -- VERTICAL TAB\n        -- THIS IS different JSON format, row terminator is not a new line, it treats the rows as single\n        -- Because our file is different.\n        ROWTERMINATOR = '0x0b'  -- VERTICAL TAB\n    )\nWITH (\n    jsonDoc NVARCHAR(MAX)\n) AS rate_code\nCROSS APPLY OPENJSON(jsonDoc)\nWITH (\n    rate_code_id TINYINT,\n    rate_code VARCHAR(20)\n)\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_discovery",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}